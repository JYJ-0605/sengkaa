"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 이미지 업로드 경로
MEDIA_URL  = "/media/"
MEDIA_ROOT = BASE_DIR / "media"   # BASE_DIR은 settings 맨 위 이미 있음


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%%j)l=t7e*z2&(h^)6i(sdp8hhd&931fhuqh@#qk7e501yo64i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["eventcafe.site", "www.eventcafe.site", "127.0.0.1", "localhost"]



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin', # Admin 사이트 관련 로그
    'django.contrib.auth', # 기본 유저 및 권한 기능
    'django.contrib.contenttypes', # 모델 타입 추적
    'django.contrib.sessions', # 세션 저장
    'django.contrib.messages', # 메시지 프레임워크
    'django.contrib.staticfiles', #정적 파일 관리용
    'rest_framework',
    'corsheaders',  # React와 연결할 때 필요
    'api',          # 생성한 앱 추가
    'django_extensions',  # ✅ django-extensions 추가
    'redis'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # CORS 활성화
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
import pymysql
pymysql.install_as_MySQLdb()
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'eventcafe',
        'USER': 'eventcafe',
        'PASSWORD': 'eventcafe123',
        'HOST': 'eventcafe.c76iaa8ycok0.ap-northeast-2.rds.amazonaws.com',
        'PORT': '3306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
            'connect_timeout': 600,
            'read_timeout': 600,
            'write_timeout': 600,
        },
    }
}




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

STATIC_ROOT = "/var/www/eventcafe-backend/static/"

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

CORS_ALLOW_ALL_ORIGINS = True  # 보안이 필요하면 특정 도메인만 허용

# settings.py
REDIS_HOST = '127.0.0.1'
REDIS_PORT = 6379
REDIS_DB = 0


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'eventcafe649@gmail.com'         # 여기 사용하고 싶은 Gmail 주소
EMAIL_HOST_PASSWORD = 'igxcdrfdjmylywtb'   # Gmail 앱 비밀번호
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# settings.py 가장 아래쪽에 추가하면 됨
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}


SIMPLE_JWT = {
    "USER_ID_FIELD": "user_id",  # ← 너 모델에서 실제 PK 필드명
    "USER_ID_CLAIM": "user_id",  # ← JWT payload에 들어갈 이름
}

KAKAO_REST_API_KEY="4083ddda8b18709f62bb857f2c52f127"
KAKAO_REDIRECT_URI="https://eventcafe.site/user/oauth/kakao/callback"

