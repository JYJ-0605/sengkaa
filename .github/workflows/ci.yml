name: CI/CD for React and Django

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. GitHub 저장소 클론
    - name: Checkout code
      uses: actions/checkout@v3

    ## --------------- React Frontend 설정 ---------------
    # 2. Node.js 환경 설정
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16  # React LTS 버전

    - name: Install React dependencies
      run: npm install

    - name: Build React project
      run: |
        export CI=false
        npm run build

    ## --------------- Django Backend 설정 ---------------
    # 3. Python 환경 설정
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.9.21  # Django 지원 버전

    - name: Install Django dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Django migrations
      run: |
        source venv/bin/activate
        python manage.py migrate

    ## --------------- EC2 배포 설정 ---------------
    # 4. React 빌드 파일을 EC2로 전송
    - name: Deploy React to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "${EC2_SSH_KEY}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./build/ ${EC2_USER}@${EC2_HOST}:/var/www/html

    # 5. Django 백엔드를 EC2로 배포
    - name: Deploy Django Backend to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} << 'EOF'
          cd /var/www/eventcafe-backend
          git pull origin master
          source venv/bin/activate
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo systemctl restart gunicorn
        EOF

    # 6. Nginx 재시작 (EC2 내부에서)
    - name: Restart Nginx
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} "sudo systemctl restart nginx"
